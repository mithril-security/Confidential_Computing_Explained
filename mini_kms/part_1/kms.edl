
enclave {
    from "openenclave/edl/syscall.edl" import *;
     from "openenclave/edl/logging.edl" import oe_write_ocall;
    from "openenclave/edl/fcntl.edl" import *;
    from "openenclave/edl/socket.edl" import *;
    from "openenclave/edl/epoll.edl" import *;
    from "platform.edl" import *;
#ifdef EDL_USE_HOST_ENTROPY
    from "openenclave/edl/sgx/entropy.edl" import *;
#endif

    trusted {
        public int set_up_server([in, string] const char* port, [in, string] const char* private_key, size_t len_private_key,
         [in, string] const char* certificate, size_t len_certificate, bool keep_server_up);
/* 
        public void initialize_wallet(
            [in, count=password_len] const char* password,
            size_t password_len, 
            [in, out] encryption_header_t *header
        ); 

        public void generate_aes(
            [out] uint32_t* sym_key
        );

        public void generate_rsa_key_pair(
            [out] uint32_t* private_key, [out] uint32_t* public_key
        );

        public void generate_ecdsa_key_pair(
            [out] uint32_t* private_key, [out] uint32_t* public_key
        );

        public int encrypt_block(bool encrypt, 
            [in, count=size] unsigned char* input_buf,
            [out, count=size] unsigned char* output_buf,
            size_t size
        ); 
        

        public void close_wallet();

*/
    };
/*
    untrusted {
        public int set_up_server([in, string] char* port, bool keep_server_up);
        
        public void export_key();

        public void import_key();
    };
*/
};